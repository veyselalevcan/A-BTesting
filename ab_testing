#####################################################
# AB Testi ile Bidding Yöntemlerinin Dönüşümünün Karşılaştırılması
#####################################################

#####################################################
# İş Problemi
#####################################################

# Facebook kısa süre önce mevcut "maximumbidding" adı verilen teklif verme türüne alternatif
# olarak yeni bir teklif türü olan "average bidding"’i tanıttı. Müşterilerimizden biri olan bombabomba.com,
# bu yeni özelliği test etmeye karar verdi ve averagebidding'in maximumbidding'den daha fazla dönüşüm
# getirip getirmediğini anlamak için bir A/B testi yapmak istiyor.A/B testi 1 aydır devam ediyor ve
# bombabomba.com şimdi sizden bu A/B testinin sonuçlarını analiz etmenizi bekliyor.Bombabomba.com için
# nihai başarı ölçütü Purchase'dır. Bu nedenle, istatistiksel testler için Purchase metriğine odaklanılmalıdır.

#####################################################
# Veri Seti Hikayesi
#####################################################

# Bir firmanın web site bilgilerini içeren bu veri setinde kullanıcıların gördükleri ve tıkladıkları
# reklam sayıları gibi bilgilerin yanı sıra buradan gelen kazanç bilgileri yer almaktadır.Kontrol ve Test
# grubu olmak üzere iki ayrı veri seti vardır. Bu veri setleri ab_testing.xlsxexcel’inin ayrı sayfalarında yer
# almaktadır. Kontrol grubuna Maximum Bidding, test grubuna AverageBidding uygulanmıştır.

# impression: Reklam görüntüleme sayısı
# Click: Görüntülenen reklama tıklama sayısı
# Purchase: Tıklanan reklamlar sonrası satın alınan ürün sayısı
# Earning: Satın alınan ürünler sonrası elde edilen kazanç

#####################################################
# Proje Görevleri
#####################################################

######################################################
# AB Testing (Bağımsız İki Örneklem T Testi)
######################################################

# 1. Hipotezleri Kur
# 2. Varsayım Kontrolü
#   - 1. Normallik Varsayımı (shapiro)
#   - 2. Varyans Homojenliği (levene)
# 3. Hipotezin Uygulanması
#   - 1. Varsayımlar sağlanıyorsa bağımsız iki örneklem t testi
#   - 2. Varsayımlar sağlanmıyorsa mannwhitneyu testi
# 4. p-value değerine göre sonuçları yorumla
# Not:
# - Normallik sağlanmıyorsa direkt 2 numara. Varyans homojenliği sağlanmıyorsa 1 numaraya arguman girilir.
# - Normallik incelemesi öncesi aykırı değer incelemesi ve düzeltmesi yapmak faydalı olabilir.

#####################################################
# Görev 1:  Veriyi Hazırlama ve Analiz Etme
#####################################################
import itertools
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
!pip install statsmodels
import statsmodels.stats.api as sms
from scipy.stats import ttest_1samp, shapiro, levene, ttest_ind, mannwhitneyu, \
    pearsonr, spearmanr, kendalltau, f_oneway, kruskal
from statsmodels.stats.proportion import proportions_ztest

pd.set_option('display.max_columns', None)
pd.set_option('display.max_rows', 10)
pd.set_option('display.float_format', lambda x: '%.5f' % x)

# Adım 1:  ab_testing_data.xlsx adlı kontrol ve test grubu verilerinden oluşan veri setini okutunuz.
# Kontrol ve test grubu verilerini ayrı değişkenlere atayınız.

df = pd.read_excel('datasets/ab_testing.xlsx', sheet_name=None)
type(df)
df_control = pd.read_excel('datasets/ab_testing.xlsx', sheet_name='Control Group')
df_test = pd.read_excel('datasets/ab_testing.xlsx', sheet_name='Test Group')

# Adım 2: Kontrol ve test grubu verilerini analiz ediniz.

df_control.describe().T
df_test.describe().T


# Adım 3: Analiz işleminden sonra concat metodunu kullanarak kontrol ve test grubu verilerini birleştiriniz.
df_control["group"] = "Control"
df_test["group"] = "Test"

df = pd.concat([df_control,df_test], axis=0,ignore_index=False)
df.head()

df = pd.concat([df_control['Purchase'], df_test['Purchase']], keys=['Control Group', 'Test Group']) #ignore_index=true
df.keys()

# Uzun yoldan concat birleştirme:
control_group = np.arange(len(df_control['Purchase']))
control_group = pd.DataFrame(control_group)
control_group[:] = 'Control Group'
control_purchase = pd.concat([control_group, df_control], axis=1)

test_group = np.arange(len(df_test['Purchase']))
test_group = pd.DataFrame(test_group)
test_group[:] = 'Test Group'
test_purchase = pd.concat([test_group, df_test], axis=1)

control_test_purchase = pd.concat([control_purchase, test_purchase])
control_test_purchase.columns = ['Gruop', 'Impression', 'Click', 'Purchase', 'Earning']

sns.boxplot(x='Gruop', y= 'Purchase', data=control_test_purchase)

#####################################################
# Görev 2:  A/B Testinin Hipotezinin Tanımlanması
#####################################################

# Adım 1: Hipotezi tanımlayınız.
# H0: kontrol ve test grubu satın alma ortalamaları arasında istatistiki olarak anlamlı bir fark yoktur.
# H1: vardır

# Adım 2: Kontrol ve test grubu için purchase(kazanç) ortalamalarını analiz ediniz
df_control['Purchase'].describe().T
df_test.Purchase.describe().T
df.groupby("group").agg({"Purchase": ["mean", 'count']})

#####################################################
# GÖREV 3: Hipotez Testinin Gerçekleştirilmesi
#####################################################

######################################################
# AB Testing (Bağımsız İki Örneklem T Testi)
######################################################

# Adım 1: Hipotez testi yapılmadan önce varsayım kontrollerini yapınız.
# Bunlar Normallik Varsayımı ve Varyans Homojenliğidir.
# Kontrol ve test grubunun normallik varsayımına uyup uymadığını Purchase değişkeni üzerinden ayrı ayrı test ediniz

############################
# Normallik Varsayımı
############################

# H0: Normal dağılım varsayımı sağlanmaktadır.
# H1:..sağlanmamaktadır.
# shapiro testi,normal dağılıma uyup uymadığını test eder. birinci ilgili grup, ikinciye ilgili değişken

test_stat, pvalue = shapiro(df_control['Purchase'])
print('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))

test_stat, pvalue = shapiro(df_test['Purchase'])
print('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))

# Test için loc ile seçilen ikinci yol:
test_stat, pvalue = shapiro(df.loc[df["group"] == "Control", "Purchase"])
print('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))

# p > 0.05 H0 reddedilemez. Normal dağılıma uymaktadır.
############################
# Varyans homojenliği
############################

# H0: Varyanslar Homojendir
# H1: Varyanslar Homojen Değildir

test_stat, pvalue = levene(df_control['Purchase'], df_test['Purchase'])
print('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))

# İkinci yol, seçimi loc ile yapıp tüm dataframe değil sadece ilgili kısma test yapıyorum.
test_stat, pvalue = levene(df.loc[df["group"] == "Control", "Purchase"],
                           df.loc[df["group"] == "Test", "Purchase"])
print('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))

# p > 0.05 H0 kabul Varyanslar homojen

# Adım 2: Normallik Varsayımı ve Varyans Homojenliği sonuçlarına göre uygun testi seçiniz

# Hem Normal, hem Varyanslar homojen olduğu için paremetrik T test yapacağız.

test_stat, pvalue = ttest_ind(df_control['Purchase'], df_test['Purchase'],equal_var=True)
print('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))

# loc ile seçim:
test_stat, pvalue = ttest_ind(df.loc[df["group"] == "Control", "Purchase"],
                              df.loc[df["group"] == "Test", "Purchase"],
                              equal_var=True)
print('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))

# Adım 3: Test sonucunda elde edilen p_value değerini göz önünde bulundurarak kontrol ve test grubu satın alma
# ortalamaları arasında istatistiki olarak anlamlı bir fark olup olmadığını yorumlayınız.

# p = 0.34 > 0.05 olduğu için H0 reddedilemez. Yani Kontrol ve Test grubu arasında anlamlı fark yoktur.
############################
# Varsayımlar sağlanmasaydı mannwhitneyu testi yapacaktık (non-parametrik test)
############################

test_stat, pvalue = mannwhitneyu(df_control['Purchase'], df_test['Purchase'])
print('Test Stat = %.4f, p-value = %.4f' % (test_stat, pvalue))

##############################################################
# GÖREV 4 : Sonuçların Analizi
##############################################################

# Adım 1: Hangi testi kullandınız, sebeplerini belirtiniz.

# AB Testi ( Bağımsız İki Örneklem T Testi ) kullanıldı. Örnek sayısı normal, varyanslar homojenik
# Normal daılım için shapiro, varsayım homojenliği için levene testleri.
# Eğer Normal dağılıma uymasaydı direk non paremetrik mannwithneyu testi yapılacaktı.

# Adım 2: Elde ettiğiniz test sonuçlarına göre müşteriye tavsiyede bulununuz.

# Macera arama her yenilik doğru değildir. Çalışan sisteme dokunma.
